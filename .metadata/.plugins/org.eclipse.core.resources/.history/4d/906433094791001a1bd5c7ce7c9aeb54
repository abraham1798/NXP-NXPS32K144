#include "S32K144.h" /* include peripheral declarations S32K144 */

unsigned char dato=0;
unsigned char dato_valido=0;

void LPUART1_RxTx_IRQHandler (void)
{
	unsigned char temp;
	if ((LPUART1->STAT & (1<<21))==(1<<21))   //Rx
			{
			if (LPUART1->DATA == 'A')

			}

	if ((LPUART1->STAT & (1<<23))==(1<<23))
				{
				//Handler ISR para Tx
				}
}

void UART_init(void)
{

	PCC->PCCn[PCC_PORTC_INDEX]=1<<30;
	PORTC->PCR[7]=2<<8;						//LPUART1 TX
	PORTC->PCR[6]=2<<8;						//LPUART1 RX

	SCG->SIRCDIV=1<<8;						//SIRCDIV2: 8 MHz/1

	PCC->PCCn[PCC_LPUART1_INDEX]=2<<24;		//SIRCDIV2
    PCC->PCCn[PCC_LPUART1_INDEX]|=1<<30;
	LPUART1->BAUD|=52;						//BAUD_SRG=CLK_UART/(16*9600)
	LPUART1->CTRL|=(1<<21)+(1<<19)+(1<<18);	//TE=RE=1
	S32_NVIC->ISER[33/32]=(1<<(33%32));

}

int main(void)
{


    while(1){}
	return 0;
}
